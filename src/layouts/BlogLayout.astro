---
import BaseLayout from './BaseLayout.astro';

interface Props {
  title: string;
}

const { title } = Astro.props;
const currentUrl = Astro.url.pathname;
const blogSlug = currentUrl.split('/').pop() || 'unknown';
---

<BaseLayout>
  <div class="blog-layout">
    <main class="blog-main">
      <div class="content-container">
        <slot />
      </div>
    </main>
  </div>
</BaseLayout>

<style>
  .blog-layout {
    width: 100%;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    background-color: #f9fafb;
  }

  .blog-main {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
  }

  .content-container {
    background: white;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    overflow: hidden;

    padding: 1px;

    width: 100%;
    max-width: min(90vw, 1100px); /* bis 1100px, sonst 90% Bildschirmbreite */
    margin: 0 auto; /* Zentriert den Container */
    box-sizing: border-box;
  }

  /* Stil für externe Links */
  .content-container :global(a[href^="http"]) {
    position: relative;
    padding-right: 1.2em;
    color: #2563eb;
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .content-container :global(a[href^="http"]::after) {
    content: '↗';
    position: absolute;
    right: 0;
    top: 0;
    font-size: 0.8em;
    opacity: 0.7;
  }

  .content-container :global(a[href^="http"]:hover) {
    color: #1d4ed8;
    text-decoration: underline;
  }

  /* Ausnahme für interne Links */
  .content-container :global(a[href^="/"]) {
    color: inherit;
    padding-right: 0;
  }

  .content-container :global(a[href^="/"]::after) {
    display: none;
  }

  /* Responsive Design */
  
  @media (min-width: 1200px) {
    .content-container {
      max-width: 1000px; /* Noch etwas breiter auf großen Bildschirmen */
    }
  }
  
  @media (max-width: 1024px) {
    .blog-main {
      padding: 2rem 1.5rem;
    }
    
    .content-container {
      padding: 1px;
    }
  }
  
  @media (max-width: 768px) {
    .blog-main {
      padding: 1rem;
      max-width: 100%;
    }
    
    .content-container {
      padding: 1px;
      margin: 0;
    }
  }
  
  @media (max-width: 480px) {
    .blog-main {
      padding: 0.5rem;
    }
    
    .content-container {
      padding: 1px;
      border-radius: 4px;
    }
  }
</style>

<script>
  // Füge target="_blank" und rel="noopener" zu allen externen Links hinzu
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('a[href^="http"]').forEach(link => {
      link.setAttribute('target', '_blank');
      link.setAttribute('rel', 'noopener');
    });
  });

  // Enhanced Blog Analytics
  if (typeof (window as any).gtag !== 'undefined') {
    const gtag = (window as any).gtag;
    
    // Track blog page view with custom parameters
    gtag('event', 'page_view', {
      'page_title': document.title,
      'page_location': window.location.href,
      'content_group1': 'Blog',
      'content_group2': 'Blog Post',
      'custom_parameter_1': window.location.pathname.split('/').pop() || 'unknown'
    });

    // Track blog engagement
    gtag('event', 'blog_engagement', {
      'event_category': 'Blog',
      'event_label': window.location.pathname,
      'custom_parameter_1': 'blog_visit'
    });

    // Track scroll depth for blog posts
    let maxScroll = 0;
    let scrollTracked = false;
    
    window.addEventListener('scroll', () => {
      const scrollPercent = Math.round((window.scrollY / (document.body.scrollHeight - window.innerHeight)) * 100);
      
      if (scrollPercent > maxScroll) {
        maxScroll = scrollPercent;
      }
      
      // Track significant scroll milestones
      if (!scrollTracked && scrollPercent >= 75) {
        gtag('event', 'scroll_depth', {
          'event_category': 'Blog Engagement',
          'event_label': window.location.pathname,
          'value': 75
        });
        scrollTracked = true;
      }
    });

    // Track time spent on blog page
    let startTime = Date.now();
    let timeTracked = false;
    
    window.addEventListener('beforeunload', () => {
      const timeSpent = Math.round((Date.now() - startTime) / 1000);
      
      if (timeSpent > 30 && !timeTracked) {
        gtag('event', 'blog_time_spent', {
          'event_category': 'Blog Engagement',
          'event_label': window.location.pathname,
          'value': timeSpent
        });
        timeTracked = true;
      }
    });

    // Track external link clicks from blog posts
    document.addEventListener('click', (e) => {
      if (!e.target) return;
      const link = (e.target as HTMLElement).closest('a');
      if (link && link.href && link.href.startsWith('http') && !link.href.includes(window.location.hostname)) {
        gtag('event', 'external_link_click', {
          'event_category': 'Blog Outbound',
          'event_label': link.href,
          'transport_type': 'beacon'
        });
      }
    });
  }
</script>
